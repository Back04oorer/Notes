@misc{2-1-1.Hash(1),
  title = {2-1-1.Hash (1),Lecture Slides},
  howpublished = {Canvas}
}

@misc{Lecture1,
  title = {Lecture1,Lecture Slides},
  howpublished = {Canvas}
}

@misc{2-2.Symmetric-Enc-1,
  title = {2-2.Symmetric-Enc-1,Lecture Slides},
  howpublished = {Canvas}
}

@misc{3-1.Symmetric-Crypto,
  title = {3-1.Symmetric-Crypto,Lecture Slides},
  howpublished = {Canvas}
}

@misc{4_Identification,
  title = {3-1.Symmetric-Crypto,Lecture Slides},
  howpublished = {Canvas}
}

@misc{5-2.security-protocol,
  title = {5-2.security protocol,Lecture Slides},
  howpublished = {Canvas}
}

@misc{info2222-solutions-week4,
  title = {info2222-solutions-week4, Tutorial Solution},
  howpublished = {Canvas}
}



@misc{AlibabaCloud2019HighAvailability,
  author = {Alibaba Cloud},
  title = {How to Set Up a Web Server with High Availability Using Server Load Balancer},
  year = {2019},
  howpublished = {\url{https://www.alibabacloud.com/blog/how-to-set-up-a-web-server-with-high-availability-using-server-load-balancer_598769}},
  note = {Accessed: 2024-03-16}
}

@Inbook{ref1,
title="Crypto",
bookTitle="Handbook for CTFers",
year="2022",
publisher="Springer Nature Singapore",
address="Singapore",
pages="553--608",
abstract="Besides the Web and binary, another important category of challenges in the CTF is Crypto (cryptography). Cryptography is an ancient subject that has developed with people's growing pursuit of information confidentiality, and has become the foundation of modern cybersecurity. In recent years, the difficulty of cryptography challenges in CTF has been increasing, and the percentage of these challenges is also increasing. Compared with the Web and binary challenges, cryptography tests the basic knowledge of the participants and requires high mathematical knowledge, logical thinking ability and analytical ability.",
isbn="978-981-19-0336-6",
doi="10.1007/978-981-19-0336-6_7",
url="https://doi.org/10.1007/978-981-19-0336-6_7"
}




@misc{TritonSSLProject,
  author = "{Triton}",
  title = "Secure Socket Layer Project",
  howpublished = {\url{https://triton.com/project/secure-socket-layer/}},
  note = {Accessed: 2024-03-16}
}

@misc{OktaStreamCipher,
  title = {Stream Cipher},
  author = {Okta},
  year = {2024},
  howpublished = {\url{https://www.okta.com/au/identity-101/stream-cipher/#:~:text=A%20stream%20cipher%20is%20an,both%20encrypts%20and%20decrypts%20messages.}},
  note = {Accessed: 2024-03-16}
}

@InProceedings{Length_extension_attack,
author="Peyrin, Thomas
and Sasaki, Yu
and Wang, Lei",
editor="Wang, Xiaoyun
and Sako, Kazue",
title="Generic Related-Key Attacks for HMAC",
booktitle="Advances in Cryptology -- ASIACRYPT 2012",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="580--597",
abstract="In this article we describe new generic distinguishing and forgery attacks in the related-key scenario (using only a single related-key) for the HMAC construction. When HMAC uses a k-bit key, outputs an n-bit MAC, and is instantiated with an l-bit inner iterative hash function processing m-bit message blocks where m{\thinspace}={\thinspace}k, our distinguishing-R attack requires about 2n/2 queries which improves over the currently best known generic attack complexity 2l/2 as soon as l{\thinspace}>{\thinspace}n. This means that contrary to the general belief, using wide-pipe hash functions as internal primitive will not increase the overall security of HMAC in the related-key model when the key size is equal to the message block size. We also present generic related-key distinguishing-H, internal state recovery and forgery attacks. Our method is new and elegant, and uses a simple cycle-size detection criterion. The issue in the HMAC construction (not present in the NMAC construction) comes from the non-independence of the two inner hash layers and we provide a simple patch in order to avoid this generic attack. Our work finally shows that the choice of the opad and ipad constants value in HMAC is important.",
isbn="978-3-642-34961-4"
}


@INPROCEEDINGS{9573660,
  author={Prasanna, Shwetha R. and Premananda, B.S.},
  booktitle={2021 International Conference on Recent Trends on Electronics, Information, Communication \& Technology (RTEICT)},
  title={Performance Analysis of MD5 and SHA-256 Algorithms to Maintain Data Integrity},
  year={2021},
  pages={246-250},
  keywords={Hash functions, Databases, Computer hacking, Data integrity, Tools, Performance analysis, Encryption, Cryptography, Hash, MD5, SHA-256},
  doi={10.1109/RTEICT52294.2021.9573660}
}


@inproceedings{adams2004security,
  title={On the security of key derivation functions},
  author={Adams, Carlisle and Kramer, Guenther and Mister, Serge and Zuccherato, Robert},
  booktitle={International Conference on Information Security},
  pages={134--145},
  year={2004},
  organization={Springer}
}

@article{o2003comparing,
  title={Comparing passwords, tokens, and biometrics for user authentication},
  author={O'Gorman, Lawrence},
  journal={Proceedings of the IEEE},
  volume={91},
  number={12},
  pages={2021--2040},
  year={2003},
  publisher={IEEE}
}

@misc{Lenovo2023VirusSignature,
  author = {Lenovo},
  title = {What is Virus Signature?},
  year = {2023},
  url = {https://www.lenovo.com/us/en/glossary/what-is-virus-signature/},
  note = {Accessed: 2024-03-25},
  organization = {Lenovo}
}


@online{KasperskyVirusDisinfection,
  author = {Alexey Malanov},
  title = {The basics of signature-based virus disinfection},
  year = {2023},  % Update this with the actual year of publication
  url = {https://www.kaspersky.com.au/blog/signature-virus-disinfection/13233/},
  urldate = {2024-03-25},  % Update this with the actual date you accessed the webpage
  publisher = {Kaspersky},
  note = {Accessed: March 25, 2024}  
}

@INPROCEEDINGS{7740362,
  author={Selamat, Nur Syuhada and Mohd Ali, Fakariah Hani and Abu Othman, Noor Ashitah},
  booktitle={2016 6th International Conference on IT Convergence and Security (ICITCS)}, 
  title={Polymorphic Malware Detection}, 
  year={2016},
  volume={},
  number={},
  pages={1-5},
  keywords={Malware;Computers;Engines;Virtual machining;Presses;Safety},
  doi={10.1109/ICITCS.2016.7740362}}

@InProceedings{10.1007/978-3-642-17569-5_39,
author="Murad, Khurram
and Shirazi, Syed Noor-ul-Hassan
and Zikria, Yousaf Bin
and Ikram, Nassar",
editor="Kim, Tai-hoon
and Lee, Young-hoon
and Kang, Byeong-Ho
and {\'{S}}l{\k{e}}zak, Dominik",
title="Evading Virus Detection Using Code Obfuscation",
booktitle="Future Generation Information Technology",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="394--401",
abstract="The conflict between malware authors and analysts is heating up as both are coming up with new armaments in their armory. Malware authors are employing novel sophisticated techniques like metamorphosis to thwart detection mechanisms while security professionals are budding new ways to confront them. In this paper we formally treat diverse mechanisms of making malware undetectable in general and code mutation techniques in particular. We also supported our argument where possible, through different tools and have revealed their outcome. In the end we give our methodology to make any virus undetectable using amalgamation of hex editing and metamorphic techniques.",
isbn="978-3-642-17569-5"
}

@phdthesis{phdthesis,
author = {Ismael, Ahmed and Kashmar, Dr},
year = {2019},
month = {08},
pages = {},
title = {Construct a Strong and High Performance Algorithm to Generate Pseudorandom Number Generator (PRNG) for Stream Cipher}
}


