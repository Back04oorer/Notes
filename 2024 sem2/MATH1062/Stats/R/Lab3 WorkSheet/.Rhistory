abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red")
abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
iqr
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red")
abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
iqr
data$Sold[4]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red")
abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
iqr
data$Sold
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red")
abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red")
abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red")
abline(v=quantile(data$Sold)[4],col="red")
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple")
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple") # out of the plot
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple") # out of the plot
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple") # out of the plot
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
boxplot(data$Sold, horizontal=T)
iqr=quantile(data$Sold)[4] - quantile(data$Sold)[2]
abline(v=median(data$Sold),col="green")
abline(v=quantile(data$Sold)[2],col="red") # 25%
abline(v=quantile(data$Sold)[4],col="red") # 75%
abline(v=quantile(data$Sold)[2]- 1.5*iqr,col="purple") # out of the plot
abline(v=quantile(data$Sold)[4]+ 1.5*iqr,col="purple")
IQR(data$Sold)
knitr::opts_chunk$set(echo = TRUE)
quakes
str(quakes)
str(iris)
iris
str(quakes)
knitr::opts_chunk$set(echo = TRUE)
str(quakes)
str(iris)
### Write your code here. The code is completed in Task 1.0 for demonstration.
dim(ChickWeight) # the dimension of the ChickWeight data set
names(ChickWeight) # display variable names
head(ChickWeight) # display the first several variables
### Code for Task 1.1. Write your code here
###
table(Diet)
### Write your code here. The code is completed in Task 1.0 for demonstration.
dim(ChickWeight) # the dimension of the ChickWeight data set
names(ChickWeight) # display variable names
head(ChickWeight) # display the first several variables
### Code for Task 1.1. Write your code here
###
table(ChickWeight$Diet)
### Code for Task 1.1. Write your code here
###
table(ChickWeight$Diet)
barplot(table(ChickWeight$Diet))
### Code for Task 1.2. Write your code here
###
weight = ChickWeight$weight
mean(weight)
median(weight)
### Code for Task 1.2. Write your code here
###
weight = ChickWeight$weight
mean(weight)
median(weight)
hist(weight,freq = FALSE)
### Code for Task 1.2. Write your code here
###
weight = ChickWeight$weight
mean(weight)
median(weight)
hist(weight,freq = FALSE)
abline(v=mean(weight),col="green")
abline(v=median(weight),col="red")
### Code for Task 2.1. Write your code here
###
ChickWeight[ChickWeight$Time > 18]
### Code for Task 2.1. Write your code here
###
ChickWeight[Time > 18]
### Code for Task 2.1. Write your code here
###
ChickWeight[ChickWeight$Time > 18, ]
### Code for Task 2.1. Write your code here
###
ChickWeight[ChickWeight$Time > 18, ]
### Code for Task 2.1. Write your code here
###
ChickWeight[ChickWeight$Time >= 18, ]
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
weight_18
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$Weight
Diet_18 = ChickWeight_18$Diet
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$Weight
Diet_18 = ChickWeight_18$Diet
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$Weight
diet_18 = ChickWeight_18$Diet
weight_18
diet_18
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
diet_18 = ChickWeight_18$Diet
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
diet_18 = ChickWeight_18$Diet
boxplot(weight_18 ~ diet_18, horizontal = T)
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
diet_18 = ChickWeight_18$Diet
boxplot(weight_18 ~ diet_18,
horizontal = TRUE,
main = "Comparative Boxplot of Weight by Diet",
xlab = "Weight",
ylab = "Diet")
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
diet_18 = ChickWeight_18$Diet
boxplot(weight_18 ~ diet_18,
horizontal = TRUE,
main = "Comparative Boxplot of Weight by Diet",
xlab = "Weight",
ylab = "Diet",
col = c("lightblue", "lightgreen", "lightpink", "lightyellow"))
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
diet_18 = ChickWeight_18$Diet
boxplot(weight_18 ~ diet_18, horizontal = TRUE, main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
### Code for Task 2.2.  Write your code here
###
median(weight)
### Code for Task 2.2.  Write your code here
###
median(weight)
### Code for Task 2.1. Write your code here
###
ChickWeight_18 = ChickWeight[ChickWeight$Time >= 18, ]
weight_18 = ChickWeight_18$weight
diet_18 = ChickWeight_18$Diet
boxplot(weight_18 ~ diet_18, main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
### Code for Task 2.2.  Write your code here
###
median(weight)
summary(weight)
#25%
### Code for Task 2.2.  Write your code here
###
median(weight)
summary(weight)
# 25%
summary(weight)][2]
### Code for Task 2.2.  Write your code here
###
median(weight)
summary(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$diet, main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet, main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet,horizontal = TRUE ,main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet,horizontal = TRUE ,main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
abline(v = median_weight, col = "green", lty = 2)  # median
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet,horizontal = TRUE ,main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
abline(v = median(weight), col = "green", lty = 2)  # median
abline(v = summary(weight)[2], col = "red", lty = 2)    # 1st Quantile
abline(v = summary(weight)[5], col = "red", lty = 2)    # 3st QUantile
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet,horizontal = TRUE ,main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
abline(v = median(weight), col = "green", lty = 2)  # median
abline(v = summary(weight)[2], col = "red", lty = 2)    # 1st Quantile
abline(v = summary(weight)[5], col = "red")    # 3st QUantile
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet,horizontal = TRUE ,main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
abline(v = median(weight), col = "green")  # median
abline(v = summary(weight)[2], col = "red")    # 1st Quantile
abline(v = summary(weight)[5], col = "red")    # 3st QUantile
### Code for Task 2.3.  Write your code here
###
# 使用 summary() 获取四分位数和中位数
weight_summary <- summary(ChickWeight$weight)
# 提取四分位数和中位数
q1 <- weight_summary["1st Qu."]
q3 <- weight_summary["3rd Qu."]
iqr <- q3 - q1
# 计算上限和下限
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
# 查找异常值
outliers <- ChickWeight$weight[ChickWeight$weight < lower_threshold | ChickWeight$weight > upper_threshold]
number_of_outliers <- length(outliers)
# 输出结果
lower_threshold
upper_threshold
outliers
number_of_outliers
### Code for Task 2.3.  Write your code here
###
weight_summary = summary(ChickWeight$weight)
# extract 1st,3rd quantile
q1 <- weight_summary["1st Qu."]
q3 <- weight_summary["3rd Qu."]
iqr <- q3 - q1
# Calculate upper and lower threshold
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
outliers <- ChickWeight$weight[ChickWeight$weight < lower_threshold | ChickWeight$weight > upper_threshold]
number_of_outliers = length(outliers)
# 输出结果
lower_threshold
upper_threshold
outliers
number_of_outliers
### Code for Task 2.3.  Write your code here
###
weight_summary = summary(ChickWeight$weight)
# extract 1st,3rd quantile
q1 <- weight_summary["1st Qu."]
q3 <- weight_summary["3rd Qu."]
iqr <- q3 - q1
# Calculate upper and lower threshold
lower_threshold <- q1 - 1.5 * iqr
upper_threshold <- q3 + 1.5 * iqr
outliers <- ChickWeight$weight[ChickWeight$weight < lower_threshold | ChickWeight$weight > upper_threshold]
number_of_outliers = length(outliers)
# print
lower_threshold
upper_threshold
outliers
number_of_outliers
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
sample_mean <- 206
sample_sd <- 66
proportion_above_400 == 1 - pnorm(400, mean = sample_mean, sd = sample_sd)
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
sample_mean <- 206
sample_sd <- 66
proportion_above_400 = 1 - pnorm(400, mean = sample_mean, sd = sample_sd)
percentage_above_400 = round(proportion_above_400 * 100, 2)
percentage_above_400
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
sample_mean <- 206
sample_sd <- 66
proportion_above_400 = pnorm(400, sample_mean, sample_sd,lower.tail = TRUE)
percentage_above_400 = round(proportion_above_400 * 100, 2)
percentage_above_400
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
sample_mean <- 206
sample_sd <- 66
proportion_above_400 = pnorm(400, sample_mean, sample_sd,lower.tail = FALSE)
percentage_above_400 = round(proportion_above_400 * 100, 2)
percentage_above_400
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
sample_mean <- 206
sample_sd <- 66
proportion_above_400 = pnorm(400, sample_mean, sample_sd,lower.tail = FALSE)
proportion_above_400
percentage_above_400 = round(proportion_above_400 * 100, 2)
percentage_above_400
### Code for Task 3.1.  Write your code here
###
ChickWeight_18_21 <- ChickWeight[ChickWeight$Time >= 18 & ChickWeight$Time <= 21, ]
sample_mean = mean(ChickWeight_18_21$weight)
sample_sd = sd(ChickWeight_18_21$weight)
sample_mean
sample_sd
sample_mean <- 206
sample_sd <- 66
proportion_above_400 = pnorm(400, sample_mean, sample_sd,lower.tail = FALSE)
percentage_above_400 = round(proportion_above_400 * 100, 2)
percentage_above_400
### Code for Task 3.2.  Write your code here
###
percentile_30 <- qnorm(0.30, mean = sample_mean, sd = sample_sd)
percentile_30 <- round(percentile_30, 2)
percentile_30
### Code for Task 3.3.
###
my_pop_var = function(X){
mu == mean(X)
pop_variance == sum((X - mu)^2) / length(X)
return(pop_variance)
}
### Code for Task 3.4.  Write your code here
###
my_pop_var(ChickWeight$weight)
### Code for Task 3.3.
###
my_pop_var = function(X){
mu = mean(X)
pop_variance = sum((X - mu)^2) / length(X)
return(pop_variance)
}
### Code for Task 3.4.  Write your code here
###
my_pop_var(ChickWeight$weight)
### Code for Task 3.4.  Write your code here
###
my_pop_var(ChickWeight$weight)
var(ChickWeight$weight)
### Code for Task 2.2.  Write your code here
###
median(weight)
# 25%
summary(weight)[2]
# 75%
summary(weight)[5]
boxplot(weight ~ ChickWeight$Diet,horizontal = TRUE ,main = "Comparative Boxplot of Weight by Diet", xlab = "Weight",ylab = "Diet",col = c("blue", "green", "pink", "yellow"))
abline(v = median(weight), col = "green")  # median
abline(v = summary(weight)[2], col = "red")    # 1st Quantile
abline(v = summary(weight)[5], col = "red")    # 3st QUantile
math1005 = read.csv("math1005_cleaned.csv")
math1005 = read.csv("math1005_cleaned.csv")
install.packages(c("wordcloud", "tm"))
